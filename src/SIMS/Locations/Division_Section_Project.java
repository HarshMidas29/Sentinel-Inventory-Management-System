package SIMS.Locations;

import SIMS.Menus.Locations_Menu;
import dao.ConnectionProvider;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Daham Yakandawala
 */
public class Division_Section_Project extends javax.swing.JFrame {

    private int locationPk = 0;

    /**
     * Creates new form ManageCustomer
     */
    public Division_Section_Project() {
        initComponents();
        populateOfficeComboBox();
        setLocationRelativeTo(null);

    }

    private boolean validateFields(String formType) {
        // Only validate 'name' and 'type' fields
        if (txtName.getText().isEmpty() || cboxType.getSelectedItem().equals("Select")) {
            return true; // Validation fails
        }
        return false; // Validation succeeds
    }

    private void populateDivisionTable() {
        DefaultTableModel model = (DefaultTableModel) DivisionTable.getModel();
        model.setRowCount(0); // Clear existing rows

        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(
                    "SELECT dsp.id, dsp.name, dsp.type, o.name AS office_name, dsp.location "
                    + "FROM division_section_project dsp "
                    + "LEFT JOIN office o ON dsp.office = o.id"
            );

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("name"),
                    rs.getString("type"),
                    rs.getString("office_name") == null ? "N/A" : rs.getString("office_name"), // Replace NULL with "N/A"
                    rs.getString("location") == null ? "N/A" : rs.getString("location") // Replace NULL with "N/A"
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void populateOfficeComboBox() {
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT id, name FROM office");
            while (rs.next()) {
                cboxOffice.addItem(rs.getInt("id") + " - " + rs.getString("name"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DivisionTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        txtLocation = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnReset1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cboxType = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboxOffice = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 36)); // NOI18N
        jLabel1.setText("Manage Divisions / Sections / Projects");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        DivisionTable.setFont(new java.awt.Font("Franklin Gothic Book", 0, 12)); // NOI18N
        DivisionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Type", "Office", "Location"
            }
        ));
        DivisionTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        DivisionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DivisionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DivisionTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 690, 630));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        jLabel3.setText("Type");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, -1, -1));

        txtName.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 330, -1));

        btnUpdate.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 420, 80, -1));

        btnSave.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 420, 80, -1));

        btnClose.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 690, 70, -1));

        txtLocation.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        getContentPane().add(txtLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 360, 330, -1));

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        jLabel7.setText("Location");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 340, -1, -1));

        btnReset1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btnReset1.setText("Reset");
        btnReset1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 690, 70, -1));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, -1, -1));

        cboxType.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        cboxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Division", "Section", "Project" }));
        getContentPane().add(cboxType, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 230, 330, -1));

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        jLabel5.setText("Office");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 280, -1, -1));

        cboxOffice.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        cboxOffice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        getContentPane().add(cboxOffice, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 300, 330, -1));

        btnDelete.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 420, 80, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/New/1.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        populateDivisionTable();
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        new Locations_Menu().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:                               
        String type = cboxType.getSelectedItem().toString();
        String name = txtName.getText();
        String office = cboxOffice.getSelectedItem().toString();
        String location = txtLocation.getText();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "Please enter all required fields (Name and Type)");
        } else {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("INSERT INTO division_section_project (type, name, office, location) VALUES (?, ?, ?, ?)");

                ps.setString(1, type);
                ps.setString(2, name);
                // Allow null for office if "Select" is chosen
                if (office.equals("Select")) {
                    ps.setNull(3, java.sql.Types.INTEGER);
                } else {
                    ps.setInt(3, Integer.parseInt(office.split(" - ")[0]));
                }
                // Allow null for location if it's empty
                if (location.isEmpty()) {
                    ps.setNull(4, java.sql.Types.VARCHAR);
                } else {
                    ps.setString(4, location);
                }
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Division / Section / Project Added Successfully");
                setVisible(false);
                new Division_Section_Project().setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void DivisionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DivisionTableMouseClicked
        // TODO add your handling code here:                                  
        int index = DivisionTable.getSelectedRow();
        TableModel model = DivisionTable.getModel();

        String id = model.getValueAt(index, 0).toString();
        locationPk = Integer.parseInt(id); // Change variable name from customerPk to locationPk
        String name = model.getValueAt(index, 1).toString();
        txtName.setText(name);
        String type = model.getValueAt(index, 2).toString();
        cboxType.setSelectedItem(type);
        String office = model.getValueAt(index, 3).toString();
        cboxOffice.setSelectedItem(office);
        String location = model.getValueAt(index, 4).toString();
        txtLocation.setText(location);

        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_DivisionTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:                                       
        String type = cboxType.getSelectedItem().toString();
        String name = txtName.getText();
        String office = cboxOffice.getSelectedItem().toString();
        String location = txtLocation.getText();

        if (validateFields("edit")) {
            JOptionPane.showMessageDialog(null, "Please enter all required fields (Name and Type)");
        } else {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("UPDATE division_section_project SET type=?, name=?, office=?, location=? WHERE id=?");

                ps.setString(1, type);
                ps.setString(2, name);
                // Allow null for office if "Select" is chosen
                if (office.equals("Select")) {
                    ps.setNull(3, java.sql.Types.INTEGER);
                } else {
                    ps.setInt(3, Integer.parseInt(office.split(" - ")[0]));
                }
                // Allow null for location if it's empty
                if (location.isEmpty()) {
                    ps.setNull(4, java.sql.Types.VARCHAR);
                } else {
                    ps.setString(4, location);
                }
                ps.setInt(5, locationPk);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Division / Section / Project Updated Successfully");
                setVisible(false);
                new Division_Section_Project().setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Division_Section_Project().setVisible(true);
    }//GEN-LAST:event_btnReset1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = DivisionTable.getSelectedRow(); // Get the selected row
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a record to delete.");
            return;
        }

        TableModel model = DivisionTable.getModel();
        String id = model.getValueAt(selectedRow, 0).toString(); // Get the ID
        String name = model.getValueAt(selectedRow, 1).toString(); // Get the Name

        int confirm = JOptionPane.showConfirmDialog(
                null,
                "Delete " + name + "?",
                "Confirm Delete",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("DELETE FROM division_section_project WHERE id = ?");
                ps.setInt(1, Integer.parseInt(id)); // Pass the ID to delete
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, name + " has been deleted.");
                populateDivisionTable(); // Refresh the table
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Division_Section_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Division_Section_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Division_Section_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Division_Section_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Division_Section_Project().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DivisionTable;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboxOffice;
    private javax.swing.JComboBox<String> cboxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
